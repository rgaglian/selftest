# Include standard NCS build definitions and rules
include $(NCS_DIR)/src/ncs/build/include.ncs.mk

# Include setup makefile (autogenerated) for handling packages and netsims
include ./setup.mk

.PHONY: all start stop clean db-clean

all: ncs-project packages/selftest packages/vlan netsim packages/vlan-ned packages
	if [ ! -d ncs-cdb ]; then mkdir ncs-cdb; fi
	if [ ! -d init_data ]; then mkdir init_data; fi
	cp init_data/*.xml ncs-cdb/. > /dev/null 2>&1 || true

build: all

juniper:
		ln -s $(NCS_DIR)/packages/neds/juniper-junos-nc-3.0 packages/
		ncs-netsim add-to-network juniper-junos-nc-3.0 1 j

packages/selftest:
		(cd packages; ln -s ../../../../selftest .)
		(cd packages/selftest/src; make clean all)

packages/vlan:
		(cd packages; if [ ! -L vlan ]; then ln -s ../../package/vlan .; fi)
		(cd packages/vlan/src; make clean all)

packages/vlan-ned:
		(cd packages; ln -s ../../package/vlan-ned .)
		(cd packages/vlan-ned/src; make clean all)
		(ncs-netsim add-to-network packages/vlan-ned 1 v; ncs-netsim ncs-xml-init > ncs-cdb/netsim_devices_init.xml)
		(ID=`awk '/name.*cli/{print $0}' packages/generic-ctu/package-meta-data.xml | sed 's/[ ]*<[^>]*>//g'`; \
		sed "s/XXXX/$$ID/g" init_data/generic-ned.xml.template > ncs-cdb/generic-ned.xml)


ncs-project:
	ncs-project update -y

start: stop netsim-start
	ncs

stop: netsim-stop
	ncs --stop || true

clean: packages-clean netsim-clean db-clean
	rm -rf logs/* lux_logs
	rm -rf .bundle
	rm -rf packages/*

db-clean:
	rm -rf state/* ncs-cdb/*

# Handy CLI targets
.PHONY: cli cli-c cli-j

cli: cli-j

cli-c:
	ncs_cli -u admin -C

cli-j:
	ncs_cli -u admin


###
### HERE FOLLOWS SOME HANDY GIT TARGETS WHEN WORKING WITH REMOTE REPOS
###
.PHONY: gstat glog
gstat:
	@for i in `grep GIT_PACKAGES .build-meta 2> /dev/null | cut -d= -f2`; \
	  do \
	    echo ""; \
	    echo "--- $$i ---"; \
	    (cd "packages/$$i"; \
	    git status -uno --ignore-submodules;); \
	  done

# Set N=<n> on the command line for more log output.
N = 1
glog:
	@for i in `grep GIT_PACKAGES .build-meta 2> /dev/null | cut -d= -f2`; \
	  do \
	    echo ""; \
	    echo "--- $$i ---"; \
	    (cd "packages/$$i"; \
	     git --no-pager log -n "$(N)";); \
	    echo ""; \
	  done
